// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// laplaceIS_sml2
Rcpp::List laplaceIS_sml2(Eigen::Map<Eigen::MatrixXd> y, Eigen::Map<Eigen::MatrixXd> A, Eigen::Map<Eigen::MatrixXd> z, Eigen::Map<Eigen::VectorXd> lambda0, Eigen::Map<Eigen::VectorXd> lambda, Eigen::Map<Eigen::VectorXd> transformed_rhos, const unsigned int maxiter, const double tol, const unsigned int linkFLAG, const bool corrFLAG, const bool grFLAG, const unsigned int ncores, const unsigned int mauto_minM, const unsigned int mauto_each, const double mauto_tol);
RcppExport SEXP _gllvmSML_laplaceIS_sml2(SEXP ySEXP, SEXP ASEXP, SEXP zSEXP, SEXP lambda0SEXP, SEXP lambdaSEXP, SEXP transformed_rhosSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP linkFLAGSEXP, SEXP corrFLAGSEXP, SEXP grFLAGSEXP, SEXP ncoresSEXP, SEXP mauto_minMSEXP, SEXP mauto_eachSEXP, SEXP mauto_tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type y(ySEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type A(ASEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type z(zSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type transformed_rhos(transformed_rhosSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type linkFLAG(linkFLAGSEXP);
    Rcpp::traits::input_parameter< const bool >::type corrFLAG(corrFLAGSEXP);
    Rcpp::traits::input_parameter< const bool >::type grFLAG(grFLAGSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type mauto_minM(mauto_minMSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type mauto_each(mauto_eachSEXP);
    Rcpp::traits::input_parameter< const double >::type mauto_tol(mauto_tolSEXP);
    rcpp_result_gen = Rcpp::wrap(laplaceIS_sml2(y, A, z, lambda0, lambda, transformed_rhos, maxiter, tol, linkFLAG, corrFLAG, grFLAG, ncores, mauto_minM, mauto_each, mauto_tol));
    return rcpp_result_gen;
END_RCPP
}
// laplaceIS_sml
Rcpp::List laplaceIS_sml(Eigen::Map<Eigen::MatrixXd> y, Eigen::Map<Eigen::MatrixXd> A, Eigen::Map<Eigen::MatrixXd> z, Eigen::Map<Eigen::VectorXd> lambda0, Eigen::Map<Eigen::VectorXd> lambda, Eigen::Map<Eigen::VectorXd> transformed_rhos, const unsigned int maxiter, const double tol, const unsigned int linkFLAG, const bool corrFLAG, const bool grFLAG, const unsigned int ncores);
RcppExport SEXP _gllvmSML_laplaceIS_sml(SEXP ySEXP, SEXP ASEXP, SEXP zSEXP, SEXP lambda0SEXP, SEXP lambdaSEXP, SEXP transformed_rhosSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP linkFLAGSEXP, SEXP corrFLAGSEXP, SEXP grFLAGSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type y(ySEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type A(ASEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type z(zSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::VectorXd> >::type transformed_rhos(transformed_rhosSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type linkFLAG(linkFLAGSEXP);
    Rcpp::traits::input_parameter< const bool >::type corrFLAG(corrFLAGSEXP);
    Rcpp::traits::input_parameter< const bool >::type grFLAG(grFLAGSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(laplaceIS_sml(y, A, z, lambda0, lambda, transformed_rhos, maxiter, tol, linkFLAG, corrFLAG, grFLAG, ncores));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gllvmSML_laplaceIS_sml2", (DL_FUNC) &_gllvmSML_laplaceIS_sml2, 15},
    {"_gllvmSML_laplaceIS_sml", (DL_FUNC) &_gllvmSML_laplaceIS_sml, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_gllvmSML(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
